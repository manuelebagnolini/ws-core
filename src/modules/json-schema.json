{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "JSON Schema for extensions modules",
  "type": "object",
  "definitions": {
    "assembly": {
      "type": "object",
      "required": [ "priority" ],
      "properties": {
        "priority": { "type": "number" },
        "options": { "type": "object" }
      }
    }
  },
  "required": [ "extConfig" ],
  "properties": {
    "extConfig": {
      "type": "object",
      "properties": {
        "folder": {
          "type": "string"
        },
        "enableShutDownOnChange": {
          "type": "boolean"
        },
        "assemblies": {
          "type": "object",
          "properties": {
            "Ws.Core.Extensions.Api": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "api/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Cors": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "cors/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Data": { "$ref": "#/definitions/assembly" },
            "Ws.Core.Extensions.Data.Cache": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "data.cache/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Data.Cache.Memcached": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "data.cache.memcached/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Data.Cache.Redis": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "data.cache.redis/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Data.Cache.SqlServer": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "data.cache.sqlserver/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Data.EF": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "data.ef/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Data.EF.MySql": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "data.ef.mysql/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Data.EF.SQLite": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "data.ef.sqlite/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Data.EF.SqlServer": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "data.ef.sqlserver/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Data.FileSystem": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "data.filesystem/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Data.Mongo": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "data.mongo/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Diagnostic": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "diagnostic/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Gateway": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "gateway/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.HealthCheck": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "healthcheck/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Message": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "message/json-schema.json#" }
              }
            },
            "Ws.Core.Extensions.Spa": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "spa/json-schema.json#" }
              },
              "_properties": {
                "options": {
                  "type": "object",
                  "properties": {
                    "rootPath": {
                      "type": "string",
                      "description": "Path relative to the application root, of the directory in which the physical files are located. If the specified directory does not exist, then the SpaStaticFiles middleware will not serve any static files.",
                      "default": "Client/dist/browser"
                    },
                    "defaultPage": {
                      "type": "string",
                      "description": "Default page that hosts your SPA user interface",
                      "default": "/index.html"
                    },
                    "sourcePath": {
                      "type": "string",
                      "description": "Path, relative to the application working directory, of the directory that contains the SPA source files during development. The directory may not exist in published applications",
                      "default": "Client"
                    },
                    "startupTimeoutInSeconds": {
                      "type": "integer",
                      "description": "Maximum duration that a request will wait for the SPA to become ready to serve to the client",
                      "default": 90
                    },
                    "spaDevelopmentServer": {
                      "type": "string",
                      "description": "Use only in development! Forward incoming requests to a local development server,i.e. http://localhost:3000."
                    },
                    "cliServerScript": {
                      "type": "string",
                      "description": "Use only in development! The name of the script in your package.json file that launches the React CLI process, i.e. start. This handles requests by passing them through to an instance of the React CLI server; alternative to spaDevelopmentServer"
                    },
                    "staticFilesPaths": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          { "$ref": "#/definitions/staticFilesFolder" }
                        ]
                      }
                    },
                    "cacheResponse": {
                      "type": "object",
                      "description": "Cache prerendering output, injecting app ICache implementation",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "default": true
                        },
                        "skipQueryStringPath": {
                          "type": "boolean",
                          "description": "If true, don't cache parameterized path",
                          "default": true
                        },
                        "skipFilePath": {
                          "type": "boolean",
                          "description": "If true, cache only extensionless path",
                          "default": true
                        },
                        "addEarlyHints": {
                          "type": "object",
                          "description": "Browsers that support preload will initiate earlier fetch of page resources: https://www.w3.org/TR/preload",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "default": false
                            },
                            "types": {
                              "type": "array",
                              "items": {
                                "enum": [ "script", "style", "image" ]
                              },
                              "description": "https://www.w3.org/TR/preload/#as-attribute",
                              "uniqueItems": true
                            },
                            "maxItemsPerType": {
                              "type": "integer",
                              "default": 10
                            },
                            "allowServerPush": {
                              "type": "boolean",
                              "description": "https://www.w3.org/TR/preload/#server-push-http-2",
                              "default": true
                            }
                          }
                        },
                        "excludePaths": {
                          "type": "array",
                          "items": { "type": "string" },
                          "description": "Array of path prefixes for which cache is disabled"
                        },
                        "includePaths": {
                          "type": "array",
                          "items": { "type": "string" },
                          "description": "Array of path prefixes for which cache is always enabled"
                        }
                      }
                    }
                  }
                }
              }
            },
            "Ws.Core.Extensions.StaticFiles": {
              "allOf": [
                { "$ref": "#/definitions/assembly" }
              ],
              "properties": {
                "options": { "$ref": "staticfiles/json-schema.json#" }
              }
            }
          },
          "additionalProperties": {
            "type": [
              "string",
              "object"
            ],
            "$ref": "#/definitions/assembly"
          }
        },
        "injectors": {
          "$ref": "../core/extensions/injector-json-schema.json#"
        }
      }
    }
  }
}
