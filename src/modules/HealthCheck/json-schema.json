{
  "definitions": {
    "CheckEntries": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "appLog": {
          "$ref": "#/definitions/Options"
        },
        "storage": {
          "$ref": "#/definitions/IEnumerable<StorageCheck>"
        },
        "memory": {
          "$ref": "#/definitions/MemoryCheck"
        },
        "process": {
          "$ref": "#/definitions/IEnumerable<ProcessCheck>"
        },
        "winService": {
          "$ref": "#/definitions/IEnumerable<WinServiceCheck>"
        },
        "tcp": {
          "$ref": "#/definitions/IEnumerable<TcpCheck>"
        },
        "http": {
          "$ref": "#/definitions/IEnumerable<HttpCheck>"
        }
      }
    },
    "EndpointOptions": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "name": {
          "type": [
            "string",
            "null"
          ]
        },
        "uri": {
          "description": "i.e. http://host:8001/healthz, skip check if empty",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "HttpCheck": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "url": {
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "default": "Autogenerated guid"
        },
        "status": {
          "description": "Health status on check failure",
          "type": "string",
          "default": "Unhealthy",
          "enum": [
            "Unhealthy",
            "Degraded",
            "Healthy"
          ]
        },
        "tags": {
          "$ref": "#/definitions/String[]-1"
        }
      }
    },
    "IEnumerable<EndpointOptions>": {
      "description": "List of health check endopoint to show",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/EndpointOptions"
      }
    },
    "IEnumerable<HttpCheck>": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/HttpCheck"
      }
    },
    "IEnumerable<LogHealthStatusChecker>": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/LogHealthStatusChecker"
      }
    },
    "IEnumerable<LogLevelMinCounter>": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/LogLevelMinCounter"
      }
    },
    "IEnumerable<LogRule>": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/LogRule"
      }
    },
    "IEnumerable<LogRuleSelector>": {
      "description": "Selector roles to ignore log for this severity level",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/LogRuleSelector"
      }
    },
    "IEnumerable<ProcessCheck>": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/ProcessCheck"
      }
    },
    "IEnumerable<Route>": {
      "description": "List of health check routes; 2 routes: /healtz for basic app status, with no additional check; /healtz/checks for overall app status, performing all checks",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/Route"
      }
    },
    "IEnumerable<StorageCheck>": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/StorageCheck"
      }
    },
    "IEnumerable<String>": {
      "description": "List of policy name to validate",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ]
      }
    },
    "IEnumerable<String>-1": {
      "description": "List of authorized hosts, i.e. host:8001",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ]
      }
    },
    "IEnumerable<TcpCheck>": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/TcpCheck"
      }
    },
    "IEnumerable<WebhookOptions>": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/WebhookOptions"
      }
    },
    "IEnumerable<WinServiceCheck>": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/WinServiceCheck"
      }
    },
    "LogHealthStatusChecker": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "level": {
          "type": "string",
          "enum": [
            "Trace",
            "Debug",
            "Info",
            "Warn",
            "Error",
            "Fatal"
          ]
        },
        "minCounters": {
          "$ref": "#/definitions/IEnumerable<LogLevelMinCounter>"
        }
      }
    },
    "LogLevelMinCounter": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "minEntry": {
          "type": "integer"
        },
        "healthStatus": {
          "type": "string",
          "enum": [
            "Unhealthy",
            "Degraded",
            "Healthy"
          ]
        }
      }
    },
    "LogMessageAggregate": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "truncateLengthAt": {
          "type": "integer"
        },
        "maxLevenshteinDistanceFactor": {
          "type": "integer"
        }
      }
    },
    "LogRule": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "level": {
          "type": "string",
          "enum": [
            "Trace",
            "Debug",
            "Info",
            "Warn",
            "Error",
            "Fatal"
          ]
        },
        "selectors": {
          "$ref": "#/definitions/IEnumerable<LogRuleSelector>"
        }
      }
    },
    "LogRuleSelector": {
      "description": "Select log entry filtering logger AND message constraints",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "logger": {
          "$ref": "#/definitions/LogRuleSelectorMatch"
        },
        "message": {
          "$ref": "#/definitions/LogRuleSelectorMatch"
        }
      }
    },
    "LogRuleSelectorMatch": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "list": {
          "$ref": "#/definitions/String[]"
        },
        "role": {
          "description": "Performance order: equalTo > startWith > contains > regEx",
          "type": "string",
          "default": "EqualTo",
          "enum": [
            "EqualTo",
            "StartWith",
            "Contains",
            "RegEx"
          ]
        }
      }
    },
    "MemoryCheck": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "maximumAllocatedMb": {
          "description": "i.e. 512",
          "type": "integer"
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "default": "Autogenerated guid"
        },
        "status": {
          "description": "Health status on check failure",
          "type": "string",
          "default": "Unhealthy",
          "enum": [
            "Unhealthy",
            "Degraded",
            "Healthy"
          ]
        },
        "tags": {
          "$ref": "#/definitions/String[]-1"
        }
      }
    },
    "Options": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "appLogService": {
          "description": "IAppLogService concrete implementation class, i.e. \"MyNamespace.MyServices.MyAppLogService, MyAssembly\"\r\nOtherwise autodiscover will used, or add a transient service in Startup class before extensions discovery.",
          "type": [
            "string",
            "null"
          ]
        },
        "takeLastLog": {
          "$ref": "#/definitions/TakeLastLogCriteria"
        },
        "healthStatusCheckers": {
          "$ref": "#/definitions/IEnumerable<LogHealthStatusChecker>"
        },
        "logIgnoreRoles": {
          "$ref": "#/definitions/IEnumerable<LogRule>"
        },
        "logMessageAggregate": {
          "$ref": "#/definitions/LogMessageAggregate"
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "default": "Autogenerated guid"
        },
        "status": {
          "description": "Health status on check failure",
          "type": "string",
          "default": "Unhealthy",
          "enum": [
            "Unhealthy",
            "Degraded",
            "Healthy"
          ]
        },
        "tags": {
          "$ref": "#/definitions/String[]-1"
        }
      }
    },
    "ProcessCheck": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "processName": {
          "description": "Check if exists, skip check if empty",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "default": "Autogenerated guid"
        },
        "status": {
          "description": "Health status on check failure",
          "type": "string",
          "default": "Unhealthy",
          "enum": [
            "Unhealthy",
            "Degraded",
            "Healthy"
          ]
        },
        "tags": {
          "$ref": "#/definitions/String[]-1"
        }
      }
    },
    "Route": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "path": {
          "description": "i.e. /healtz , /healtz/checks",
          "type": [
            "string",
            "null"
          ]
        },
        "contentType": {
          "type": "string",
          "default": "json",
          "enum": [
            "json",
            "text"
          ]
        },
        "skipChecks": {
          "description": "If true skip any defined checks, returning a basic health check endpoint",
          "type": "boolean",
          "default": false
        },
        "authPolicies": {
          "$ref": "#/definitions/IEnumerable<String>"
        },
        "authHosts": {
          "$ref": "#/definitions/IEnumerable<String>-1"
        }
      }
    },
    "StorageCheck": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "driver": {
          "description": "i.e. C:\\, skip check if empty",
          "type": [
            "string",
            "null"
          ]
        },
        "minimumFreeMb": {
          "description": "i.e. 1024 = 1Gb",
          "type": "integer"
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "default": "Autogenerated guid"
        },
        "status": {
          "description": "Health status on check failure",
          "type": "string",
          "default": "Unhealthy",
          "enum": [
            "Unhealthy",
            "Degraded",
            "Healthy"
          ]
        },
        "tags": {
          "$ref": "#/definitions/String[]-1"
        }
      }
    },
    "String[]": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ]
      }
    },
    "String[]-1": {
      "description": "List of task tags",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ]
      }
    },
    "TakeLastLogCriteria": {
      "description": "Parse last logs by criteria",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "value": {
          "type": "number"
        },
        "criteria": {
          "type": "string",
          "enum": [
            "Top",
            "FromHours"
          ]
        }
      }
    },
    "TcpCheck": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "host": {
          "description": "Skip check if empty",
          "type": [
            "string",
            "null"
          ]
        },
        "port": {
          "type": "integer"
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "default": "Autogenerated guid"
        },
        "status": {
          "description": "Health status on check failure",
          "type": "string",
          "default": "Unhealthy",
          "enum": [
            "Unhealthy",
            "Degraded",
            "Healthy"
          ]
        },
        "tags": {
          "$ref": "#/definitions/String[]-1"
        }
      }
    },
    "UiOptions": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "enable": {
          "type": "boolean",
          "default": false
        },
        "route": {
          "type": [
            "string",
            "null"
          ],
          "default": "/healthchecks-ui"
        },
        "routeApi": {
          "type": [
            "string",
            "null"
          ],
          "default": "/healthchecks-api"
        },
        "routeWebhook": {
          "type": [
            "string",
            "null"
          ],
          "default": "/healthchecks-webhooks"
        },
        "injectCss": {
          "description": "i.e. wwwroot/healthcheck-ui/style.css",
          "type": [
            "string",
            "null"
          ]
        },
        "endpoints": {
          "$ref": "#/definitions/IEnumerable<EndpointOptions>"
        },
        "webhooks": {
          "$ref": "#/definitions/IEnumerable<WebhookOptions>"
        },
        "evaluationTimeinSeconds": {
          "type": "integer"
        },
        "minimumSecondsBetweenFailureNotifications": {
          "type": "integer"
        },
        "authPolicies": {
          "$ref": "#/definitions/IEnumerable<String>"
        },
        "authHosts": {
          "$ref": "#/definitions/IEnumerable<String>-1"
        }
      }
    },
    "WebhookOptions": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "payload": {
          "description": "Encoded payload for failed check. Available token: [[LIVENESS]] [[FAILURE]] [[DESCRIPTIONS]]",
          "type": [
            "string",
            "null"
          ]
        },
        "restorePayload": {
          "description": "Encoded payload for restored status. Available token: [[LIVENESS]]",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "type": [
            "string",
            "null"
          ]
        },
        "uri": {
          "description": "i.e. http://host:8001/healthz, skip check if empty",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "WinServiceCheck": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "serviceName": {
          "description": "Check if running, skip check if empty",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "default": "Autogenerated guid"
        },
        "status": {
          "description": "Health status on check failure",
          "type": "string",
          "default": "Unhealthy",
          "enum": [
            "Unhealthy",
            "Degraded",
            "Healthy"
          ]
        },
        "tags": {
          "$ref": "#/definitions/String[]-1"
        }
      }
    }
  },
  "type": [
    "object",
    "null"
  ],
  "properties": {
    "routes": {
      "$ref": "#/definitions/IEnumerable<Route>"
    },
    "checks": {
      "$ref": "#/definitions/CheckEntries"
    },
    "ui": {
      "$ref": "#/definitions/UiOptions"
    }
  }
}